import{_ as l,c as o,f as c,o as d}from"./app-CoStwzsv.js";const i={};function a(t,e){return d(),o("div",null,e[0]||(e[0]=[c('<h1 id="_2-python-기본-문법" tabindex="-1"><a class="header-anchor" href="#_2-python-기본-문법"><span>2. Python 기본 문법</span></a></h1><h2 id="_2-1-데이터-타입" tabindex="-1"><a class="header-anchor" href="#_2-1-데이터-타입"><span>2.1 데이터 타입</span></a></h2><ul><li>숫자(<code>int</code>, <code>float</code>, <code>complex</code>), 문자열(<code>str</code>), 불리언(<code>bool</code>), <code>None</code>.</li><li><code>bytes</code>와 <code>bytearray</code>의 차이점.</li><li>형 변환과 타입 확인 (<code>int()</code>, <code>str()</code>, <code>isinstance()</code>).</li><li><a href="https://docs.python.org/3/library/stdtypes.html" target="_blank" rel="noopener noreferrer">Built-in Data Types Docs</a></li></ul><h2 id="_2-2-변수와-연산자" tabindex="-1"><a class="header-anchor" href="#_2-2-변수와-연산자"><span>2.2 변수와 연산자</span></a></h2><ul><li>변수 선언, 네임스페이스, 가비지 컬렉션.</li><li>산술, 비교, 논리, 비트 연산자.</li><li>복합 연산자 (<code>+=</code>, <code>-=</code> 등)와 주의점.</li></ul><h2 id="_2-3-제어문" tabindex="-1"><a class="header-anchor" href="#_2-3-제어문"><span>2.3 제어문</span></a></h2><ul><li>조건문 (<code>if</code>, <code>elif</code>, <code>else</code>).</li><li>반복문 (<code>for</code>, <code>while</code>)과 <code>break</code>, <code>continue</code>, <code>else</code>.</li><li>사람들이 착각하기 쉬운 <code>for</code>의 동작 방식.</li></ul><h2 id="_2-4-함수" tabindex="-1"><a class="header-anchor" href="#_2-4-함수"><span>2.4 함수</span></a></h2><ul><li>함수 정의, 인자 (<code>*args</code>, <code>**kwargs</code>).</li><li>기본값 인자와 키워드 전용 인자 (<code>*, arg</code>).</li><li>함수 객체와 <code>callable()</code>: <ul><li><code>__call__</code> 메서드를 가진 객체의 동작.</li><li><code>callable(object)</code>의 활용.</li></ul></li></ul><h2 id="_2-5-예외-처리" tabindex="-1"><a class="header-anchor" href="#_2-5-예외-처리"><span>2.5 예외 처리</span></a></h2><ul><li><code>try</code>, <code>except</code>, <code>else</code>, <code>finally</code> 구조.</li><li>Built-in Exceptions (ValueError, KeyError, IndexError 등).</li><li>사용자 정의 예외와 예외 계층 설계.</li></ul>',11)]))}const r=l(i,[["render",a],["__file","2. Python 기본 문법.html.vue"]]),s=JSON.parse('{"path":"/python/2.%20Python%20%EA%B8%B0%EB%B3%B8%20%EB%AC%B8%EB%B2%95.html","title":"2. Python 기본 문법","lang":"ko-KR","frontmatter":{},"headers":[{"level":2,"title":"2.1 데이터 타입","slug":"_2-1-데이터-타입","link":"#_2-1-데이터-타입","children":[]},{"level":2,"title":"2.2 변수와 연산자","slug":"_2-2-변수와-연산자","link":"#_2-2-변수와-연산자","children":[]},{"level":2,"title":"2.3 제어문","slug":"_2-3-제어문","link":"#_2-3-제어문","children":[]},{"level":2,"title":"2.4 함수","slug":"_2-4-함수","link":"#_2-4-함수","children":[]},{"level":2,"title":"2.5 예외 처리","slug":"_2-5-예외-처리","link":"#_2-5-예외-처리","children":[]}],"git":{"updatedTime":1733809043000,"contributors":[{"name":"m1nu0x0","username":"m1nu0x0","email":"oxygen0112@naver.com","commits":1,"url":"https://github.com/m1nu0x0"}]},"filePathRelative":"python/2. Python 기본 문법.md"}');export{r as comp,s as data};
